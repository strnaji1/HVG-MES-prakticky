import streamlit as st
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import networkx as nx
import io

st.set_page_config(page_title="HVG Vizualiz치tor", layout="wide")
st.title("游늵 HVG Vizualiz치tor.")
st.title("Vizualizace hierarchick칳ch 캜asov칳ch 콏ad pomoc칤 HVG")
st.sidebar.title("Nastaven칤")

with st.sidebar:
    st.header("游댢 Vstup dat")

    typ = st.selectbox(
        "Vyber typ 캜asov칠 콏ady",
        [
            "N치hodn치 uniformn칤",
            "N치hodn치 norm치ln칤",
            "Sinusovka",
            "Nahr치t CSV",
            "Ru캜n칤 vstup"
        ]
    )

    # Parametry pro jednotliv칠 typy
    if typ == "N치hodn치 uniformn칤":
        length = st.slider("D칠lka 콏ady", 10, 500, 50)
        low, high = st.number_input("Rozmez칤 hodnot (min, max)", value=(0.0, 1.0))
    elif typ == "N치hodn치 norm치ln칤":
        length = st.slider("D칠lka 콏ady", 10, 500, 50)
        mu = st.number_input("St콏edn칤 hodnota 풮", value=0.0)
        sigma = st.number_input("Sm캩rodatn치 odchylka 픢", value=1.0)
    elif typ == "Sinusovka":
        length = st.slider("D칠lka 콏ady", 10, 500, 100)
        amp = st.number_input("Amplituda", value=1.0)
        freq = st.number_input("Frekvence", value=1.0)
    elif typ == "Nahr치t CSV":
        uploaded_file = st.file_uploader("Nahraj CSV se sloupcem hodnot", type="csv")
    elif typ == "Ru캜n칤 vstup":
        raw_text = st.text_area(
            "Zadej hodnoty odd캩len칠 캜치rkou",
            value="10, 5, 3, 7, 6"
        )

    # Tla캜칤tko pro vygenerov치n칤/na캜ten칤 콏ady
    generate = st.button("Na캜칤st / generovat 콏adu")

# --- GENEROV츼N칈 / NA캛TEN칈 콎ADY A VYKRESLEN칈 --- 
data = None

if generate:
    # 1) N치hodn치 uniformn칤
    if typ == "N치hodn치 uniformn칤":
        data = np.random.uniform(low=low, high=high, size=length)
    # 2) N치hodn치 norm치ln칤
    elif typ == "N치hodn치 norm치ln칤":
        data = np.random.normal(loc=mu, scale=sigma, size=length)
    # 3) Sinusovka
    elif typ == "Sinusovka":
        x = np.arange(length)
        data = amp * np.sin(2 * np.pi * freq * x / length)
    # 4) CSV
    elif typ == "Nahr치t CSV" and uploaded_file is not None:
        df = pd.read_csv(uploaded_file)
        # vezmeme prvn칤 sloupec
        data = df.iloc[:, 0].values
    # 5) Ru캜n칤 vstup
    elif typ == "Ru캜n칤 vstup":
        try:
            data = np.array([float(v.strip()) for v in raw_text.split(",")])
        except:
            st.error("Chybn칳 form치t ru캜n칤ho vstupu! Zkontroluj 캜치rky a 캜칤sla.")
    
    # Pokud data existuj칤, vykresli je
    if data is not None:
        st.subheader("游늳 Va코e 캜asov치 콏ada")
        # Z치kladn칤 statistiky
        st.write(f"- D칠lka 콏ady: **{len(data)}**")
        st.write(f"- Pr콢m캩r: **{data.mean():.3f}**")
        st.write(f"- Rozptyl: **{data.var():.3f}**")
        
        # Plot
        fig, ax = plt.subplots()
        ax.plot(data, marker="o", linestyle="-")
        ax.set_xlabel("Index")
        ax.set_ylabel("Hodnota")
        ax.set_title("캛asov치 콏ada")
        st.pyplot(fig)
    else:
        st.warning("Data nebyla vygenerov치na ani na캜tena.")